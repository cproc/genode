--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -2543,13 +2543,14 @@
 		unsigned int irqnum, unsigned long irqflags)
 {
 	int retval;
+	struct pci_dev *pdev = to_pci_dev(hcd->self.controller);
 
 	if (hcd->driver->irq) {
 
 		snprintf(hcd->irq_descr, sizeof(hcd->irq_descr), "%s:usb%d",
 				hcd->driver->description, hcd->self.busnum);
 		retval = request_irq(irqnum, &usb_hcd_irq, irqflags,
-				hcd->irq_descr, hcd);
+				hcd->irq_descr, hcd, pdev);
 		if (retval != 0) {
 			dev_err(hcd->self.controller,
 					"request interrupt %d failed\n",
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -227,7 +227,7 @@
 	}
 
 	ret = request_irq(pdev->irq, xhci_msi_irq,
-				0, "xhci_hcd", xhci_to_hcd(xhci));
+				0, "xhci_hcd", xhci_to_hcd(xhci), pdev);
 	if (ret) {
 		xhci_dbg_trace(xhci, trace_xhci_dbg_init,
 				"disable MSI interrupt");
@@ -301,7 +301,7 @@
 	for (i = 0; i < xhci->msix_count; i++) {
 		ret = request_irq(xhci->msix_entries[i].vector,
 				xhci_msi_irq,
-				0, "xhci_hcd", xhci_to_hcd(xhci));
+				0, "xhci_hcd", xhci_to_hcd(xhci), pdev);
 		if (ret)
 			goto disable_msix;
 	}
@@ -392,7 +392,7 @@
  legacy_irq:
 	/* fall back to legacy interrupt*/
 	ret = request_irq(pdev->irq, &usb_hcd_irq, IRQF_SHARED,
-			hcd->irq_descr, hcd);
+			hcd->irq_descr, hcd, pdev);
 	if (ret) {
 		xhci_err(xhci, "request interrupt %d failed\n",
 				pdev->irq);
