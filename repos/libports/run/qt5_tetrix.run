source ${genode_dir}/repos/libports/run/qt5_common.inc

import_from_depot [depot_user]/src/qt5_component \
                  [depot_user]/src/qt5_scriptclassic \
                  [depot_user]/src/qt5_tetrix \
                  [depot_user]/src/qt5_ui_tools \
                  [depot_user]/src/qt5_widgets \
                  [depot_user]/src/rtc_drv


#
# Build
#

append build_components [qt5_build_components feature]

append build_components { app/qt5/examples/tetrix }

build $build_components

#
# Generate config
#

append config {
<config>
	<parent-provides>}
append config [qt5_parent_provides feature]
append config { <service name="RTC"/> }
append config {
	</parent-provides>
	<default caps="100"/>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append config [qt5_start_nodes feature]

append config {

	<start name="rtc_drv">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Rtc"/> </provides>
	</start>

	<start name="tetrix" caps="500">
		<resource name="RAM" quantum="80M"/>
		<config>
			<vfs>
				<dir name="dev">
					<log/>
					<rtc/>
				</dir>
				<tar name="qt5_dejavusans.tar"/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc"/>
		</config>
		<route>
			<service name="Nitpicker"> <child name="wm"/> </service>
			<service name="Report" label="shape">
				<child name="pointer" label="wm -> tetrix -> shape"/>
			</service>
			<service name="ROM" label="egl_drv.lib.so"> <parent label="egl_swrast.lib.so" /> </service>
			<any-service> <parent /> <any-child/> </any-service>
		</route>
	</start>
</config>
}

install_config $config

#
# Boot modules
#

append boot_modules [qt5_boot_modules feature]

append boot_modules { libc.lib.so }

build_boot_image $boot_modules

run_genode_until forever
