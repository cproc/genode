#
# Build
#

set build_components {
	core init
	drivers/timer
	drivers/usb
	server/report_rom
	test/libusb
}

lappend_if [have_spec gpio] build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append_if [have_spec gpio] config {
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
		<config/>
	</start>}

append_platform_drv_config

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes">
			<rom>
				<policy label="test-libusb -> usb_devices" report="usb_drv -> usb_devices"/>
			</rom>
		</config>
	</start>
	<start name="usb_drv">
		<resource name="RAM" quantum="16M"/>
		<provides><service name="Usb"/></provides>
		<config uhci="yes" ehci="yes" xhci="yes">
			<raw>
				<report devices="yes"/>
				<policy label="test-libusb -> usb_device" bus="0x0001" dev="0x0001"/>
			</raw>
		</config>
		<route>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
	<start name="test-libusb">
		<resource name="RAM" quantum="4M"/>
		<config ld_verbose="yes">
			<libc stdout="/dev/log" stderr="/dev/log">
				<vfs> <dir name="dev"> <log/> </dir> </vfs>
			</libc>
		</config>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer usb_drv test-libusb
	ld.lib.so libc.lib.so libc_pipe.lib.so libusb.lib.so pthread.lib.so
}

lappend_if [have_spec gpio]             boot_modules gpio_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -m 256 -usb  -usbdevice mouse -usbdevice keyboard"
append qemu_args " -device usb-ehci,id=ehci"

run_genode_until forever
