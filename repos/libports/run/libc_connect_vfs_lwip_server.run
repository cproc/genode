set build_components {
	core init
	drivers/timer
	server/vfs
	lib/vfs/lwip
	server/nic_router
	test/netty/tcp
	test/libc_connect
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="nic_router" caps="1000">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="Nic"/></provides>
		<config>
			<domain name="default" interface="10.0.1.1/24"/>
			<default-policy domain="default"/>
		</config>
	</start>

	<start name="socket_fs_server" caps="150">
		<binary name="vfs"/>
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs> <lwip ip_addr="10.0.1.2" netmask="255.255.255.0" gateway="10.0.1.1"/> </vfs>
			<policy label_prefix="server" root="/" writeable="yes"/>
		</config>
	</start>

	<start name="socket_fs_client" caps="150">
		<binary name="vfs"/>
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs> <lwip ip_addr="10.0.1.3" netmask="255.255.255.0" gateway="10.0.1.1"/>	</vfs>
			<policy label_prefix="test-libc_connect" root="/" writeable="yes"/>
		</config>
	</start>

	<start name="server">
		<binary name="test-netty_tcp"/>
		<resource name="RAM" quantum="4M"/>
		<config port="80" read_write="yes" nonblock="false">
			<vfs>
				<dir name="dev">    <log/> </dir>
				<dir name="socket"> <fs/>  </dir>
				<dir name="tmp">    <ram/> </dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
		</config>
		<route>
			<service name="File_system"> <child name="socket_fs_server"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="test-libc_connect" caps="200">
		<resource name="RAM" quantum="48M"/>
		<config>
			<vfs>
				<dir name="dev"> <log/> </dir>
				<dir name="socket"> <fs/> </dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket" />
		</config>
		<route>
			<service name="File_system"> <child name="socket_fs_client"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
}

append_platform_drv_config

append config {
</config>
}

install_config $config

append boot_modules {
	core init timer vfs
	ld.lib.so libc.lib.so vfs.lib.so posix.lib.so
	libm.lib.so
	vfs_lwip.lib.so
	nic_router
	test-netty_tcp
	test-libc_connect
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -nographic "

run_genode_until forever
