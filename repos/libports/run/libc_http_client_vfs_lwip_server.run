create_boot_directory

import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/pkg/[drivers_nic_pkg] \
                  [depot_user]/src/init \
                  [depot_user]/src/libc \
                  [depot_user]/src/posix \
                  [depot_user]/src/vfs_lwip \
                  [depot_user]/src/vfs

set build_components {
	test/libc_http_client
}

build $build_components

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="drivers" caps="1000">
		<resource name="RAM" quantum="32M" constrain_phys="yes"/>
		<binary name="init"/>
		<route>
			<service name="ROM" label="config"> <parent label="drivers.config"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<provides> <service name="Nic"/> </provides>
	</start>
	<start name="vfs" caps="150">
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs>
				<dir name="socket"> <lwip dhcp="yes"/> </dir>
			</vfs>
			<default-policy writeable="yes" root="/"/>
		</config>
	</start>
	<start name="test-libc_http_client" caps="200">
		<resource name="RAM" quantum="48M"/>
		<config>
			<vfs>
				<dir name="dev"> <log/> </dir>
				<fs/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket" />
		</config>
	</start>
}

append config {
</config>
}

install_config $config

append boot_modules {
	test-libc_http_client
}

build_boot_image $boot_modules

append qemu_args " -nographic"

run_genode_until forever
