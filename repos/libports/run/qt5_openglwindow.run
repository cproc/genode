source ${genode_dir}/repos/libports/run/qt5_common.inc

import_from_depot genodelabs/src/qt5_component \
                  genodelabs/src/qt5_openglwindow

#
# Build
#

append build_components [qt5_build_components feature]

build $build_components

#
# Create Qt tar archive
#

create_qt5_fs_tar_archive "openglwindow" "gui"

#
# Generate config
#

append config {
<config>
	<parent-provides>}
append config [qt5_parent_provides feature]
append config {
	</parent-provides>
	<default caps="100"/>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append config [qt5_start_nodes feature]

append config {
	<start name="openglwindow" caps="200">
		<resource name="RAM" quantum="80M"/>
		<route>
			<service name="Nitpicker"> <child name="wm"/> </service>
			<service name="Report" label="shape">
				<child name="pointer" label="wm -> openglwindow -> shape"/>
			</service>
			<service name="ROM" label="egl_drv.lib.so"> <parent label="egl_swrast.lib.so" /> </service>
			<any-service> <parent /> <any-child/> </any-service>
		</route>
		<config>
			<vfs>
				<dir name="dev"> <log/> </dir>
				<tar name="qt5_fs_openglwindow.tar"/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log"/>
		</config>
	</start>
</config>
}

install_config $config

#
# Boot modules
#

append boot_modules [qt5_boot_modules feature]

append boot_modules {
	qt5_fs_openglwindow.tar
}

build_boot_image $boot_modules

run_genode_until forever
