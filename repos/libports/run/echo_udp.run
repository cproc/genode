assert_spec linux

set build_components {
	core init
	drivers/nic
	drivers/timer
	lib/vfs/lxip
	server/vfs
	test/echo_udp
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config verbose="yes">
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RAM"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_drv">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Nic"/> </provides>
	</start>

	<start name="socket_fs">
		<binary name="vfs"/>
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="File_system"/> </provides>
		<config ld_verbose="yes">
			<vfs audit="no">
				<lxip ip_addr="10.0.2.55" netmask="255.255.255.0" gateway="10.0.2.1"/>
			</vfs>
			<default-policy writeable="yes" />
		</config>
	</start>

	<start name="echo">
		<binary name="test-echo_udp"/>
		<resource name="RAM" quantum="4M"/>
		<config ld_verbose="yes">
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket">
				<vfs>
					<dir name="dev">    <log/> </dir>
					<dir name="socket"> <fs/>  </dir>
				</vfs>
			</libc>
		</config>
	</start>
}

append_platform_drv_config

append config {
</config>
}

install_config $config

set boot_modules {
	core init ld.lib.so
	libc.lib.so
	libm.lib.so
	lxip.lib.so
	nic_drv
	stdcxx.lib.so
	test-echo_udp
	timer
	vfs
	vfs_lxip.lib.so
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

puts "##################################################################"
puts "## run 'netcat --udp 10.0.2.55 7' to connect to the echo server ##"
puts "##################################################################"
sleep 4

run_genode_until forever

# vi: set ft=tcl :
