diff --git a/src/api/sockets.c b/src/api/sockets.c
index 1695d8f..12bcefa 100644
--- a/src/api/sockets.c
+++ b/src/api/sockets.c
@@ -325,6 +325,9 @@ static const int err_to_errno_table[] = {
   set_errno(sockerr); \
 } while (0)
 
+/* function to notify libc about a socket event */
+extern void (*libc_select_notify)();
+
 /* Forward declaration of some functions */
 static void event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len);
 #if !LWIP_TCPIP_CORE_LOCKING
@@ -1555,7 +1558,7 @@ return_copy_fdsets:
  * Processes recvevent (data available) and wakes up tasks waiting for select.
  */
 static void
-event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)
+orig_event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)
 {
   int s;
   struct lwip_sock *sock;
@@ -1671,6 +1674,17 @@ again:
   SYS_ARCH_UNPROTECT(lev);
 }
 
+/* Wrapper for the original event_callback() function that additionally calls
+ * libc_select_notify()
+ */
+static void
+event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)
+{
+	orig_event_callback(conn, evt, len);
+	if (libc_select_notify)
+		libc_select_notify();
+}
+
 /**
  * Unimplemented: Close one end of a full-duplex connection.
  * Currently, the full connection is closed.
