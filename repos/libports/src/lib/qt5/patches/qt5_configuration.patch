qt5_configuration.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>


---
 configure                                          |    2 
 qt.pro                                             |   42 ++++---
 qtbase/configure                                   |    8 +
 qtbase/mkspecs/genode-g++/qmake.conf               |   12 ++
 qtbase/mkspecs/genode-g++/qplatformdefs.h          |  116 ++++++++++++++++++++
 qtbase/src/corelib/global/qconfig-genode.h         |    1 
 qtdeclarative/examples/quick/quick.pro             |    6 +
 qtdeclarative/src/imports/imports.pro              |    2 
 qtdeclarative/tests/tests.pro                      |    4 -
 qtquick1/examples/declarative/declarative.pro      |    1 
 qtwebkit/Tools/qmake/mkspecs/features/features.prf |    6 +
 11 files changed, 166 insertions(+), 34 deletions(-)
 create mode 100644 qtbase/mkspecs/genode-g++/qmake.conf
 create mode 100644 qtbase/mkspecs/genode-g++/qplatformdefs.h
 create mode 120000 qtbase/src/corelib/global/qconfig-genode.h

diff --git a/configure b/configure
index 9ba24b5..d0f1357 100755
--- a/configure
+++ b/configure
@@ -60,4 +60,4 @@ echo "+ cd .."
 cd ..
 
 echo "+ qtbase/bin/qmake $srcpath"
-exec qtbase/bin/qmake "$srcpath"
+exec qtbase/bin/qmake -r "$srcpath"
diff --git a/qt.pro b/qt.pro
index 218701a..bb4c037 100644
--- a/qt.pro
+++ b/qt.pro
@@ -54,33 +54,33 @@ defineTest(addModule) {
 # it may not build.
 
 addModule(qtbase)
-addModule(qtx11extras, qtbase)
-addModule(qlalr, qtbase)
+#addModule(qtx11extras, qtbase)
+#addModule(qlalr, qtbase)
 addModule(qtsvg, qtbase)
 addModule(qtxmlpatterns, qtbase)
 addModule(qtjsbackend, qtbase)
 addModule(qtdeclarative, qtjsbackend, qtsvg qtxmlpatterns)
-addModule(qtquickcontrols, qtdeclarative)
-addModule(qtmultimedia, qtdeclarative)
-addModule(qtactiveqt, qtbase)
-addModule(qt3d, qtdeclarative)
-addModule(qtjsondb, qtdeclarative)
-addModule(qtsystems, qtbase, qtdeclarative qtjsondb)
-addModule(qtlocation, qtbase, qt3d qtjsondb qtsystems qtmultimedia)
-addModule(qtsensors, qtbase, qtdeclarative)
-addModule(qtconnectivity, qtsystems)
-addModule(qtfeedback, qtdeclarative, qtmultimedia)
-addModule(qtpim, qtdeclarative, qtjsondb)
+#addModule(qtquickcontrols, qtdeclarative)
+#addModule(qtmultimedia, qtdeclarative)
+#addModule(qtactiveqt, qtbase)
+#addModule(qt3d, qtdeclarative)
+#addModule(qtjsondb, qtdeclarative)
+#addModule(qtsystems, qtbase, qtdeclarative qtjsondb)
+#addModule(qtlocation, qtbase, qt3d qtjsondb qtsystems qtmultimedia)
+#addModule(qtsensors, qtbase, qtdeclarative)
+#addModule(qtconnectivity, qtsystems)
+#addModule(qtfeedback, qtdeclarative, qtmultimedia)
+#addModule(qtpim, qtdeclarative, qtjsondb)
 addModule(qtwebkit, qtdeclarative, qtlocation qtsensors, WebKit.pro)
 addModule(qttools, qtbase, qtdeclarative qtactiveqt qtwebkit)
 addModule(qtwebkit-examples, qtwebkit qttools)
 addModule(qtimageformats, qtbase)
-addModule(qtgraphicaleffects, qtdeclarative)
+#addModule(qtgraphicaleffects, qtdeclarative)
 addModule(qtscript, qtbase)
-addModule(qtquick1, qtscript, qtsvg qtxmlpatterns qtwebkit qttools)
-addModule(qtdocgallery, qtdeclarative, qtjsondb)
-!win32:!mac:addModule(qtwayland, qtbase, qtdeclarative)
-addModule(qtserialport, qtbase)
-addModule(qttranslations, qttools)
-addModule(qtdoc, qtdeclarative)
-addModule(qtqa, qtbase)
+#addModule(qtquick1, qtscript, qtsvg qtxmlpatterns qtwebkit qttools)
+#addModule(qtdocgallery, qtdeclarative, qtjsondb)
+#!win32:!mac:addModule(qtwayland, qtbase, qtdeclarative)
+#addModule(qtserialport, qtbase)
+#addModule(qttranslations, qttools)
+#addModule(qtdoc, qtdeclarative)
+#addModule(qtqa, qtbase)
diff --git a/qtbase/configure b/qtbase/configure
index d7c9674..956c3e1 100755
--- a/qtbase/configure
+++ b/qtbase/configure
@@ -857,10 +857,10 @@ CFG_XINERAMA=runtime
 CFG_XFIXES=runtime
 CFG_ZLIB=auto
 CFG_SQLITE=qt
-CFG_GIF=auto
+CFG_GIF=yes
 CFG_PNG=yes
 CFG_LIBPNG=auto
-CFG_JPEG=auto
+CFG_JPEG=yes
 CFG_LIBJPEG=auto
 CFG_XCURSOR=runtime
 CFG_XRANDR=runtime
@@ -883,7 +883,7 @@ CFG_SKIP_MODULES=""
 CFG_COMPILE_EXAMPLES=auto
 CFG_RELEASE_QMAKE=no
 CFG_AUDIO_BACKEND=auto
-CFG_V8SNAPSHOT=auto
+CFG_V8SNAPSHOT=no
 CFG_QML_DEBUG=yes
 CFG_JAVASCRIPTCORE_JIT=auto
 CFG_PKGCONFIG=auto
@@ -949,7 +949,7 @@ CFG_GETADDRINFO=auto
 CFG_IPV6IFNAME=auto
 CFG_GETIFADDRS=auto
 CFG_INOTIFY=auto
-CFG_EVENTFD=auto
+CFG_EVENTFD=no
 CFG_RPATH=yes
 CFG_FRAMEWORK=auto
 CFG_MAC_HARFBUZZ=no
diff --git a/qtbase/mkspecs/genode-g++/qmake.conf b/qtbase/mkspecs/genode-g++/qmake.conf
new file mode 100644
index 0000000..f99671f
--- /dev/null
+++ b/qtbase/mkspecs/genode-g++/qmake.conf
@@ -0,0 +1,12 @@
+#
+# qmake configuration for genode-g++
+#
+
+MAKEFILE_GENERATOR	= UNIX
+CONFIG += incremental gdb_dwarf_index
+QMAKE_INCREMENTAL_STYLE = sublib
+
+include(../common/linux.conf)
+include(../common/gcc-base-unix.conf)
+include(../common/g++-unix.conf)
+load(qt_config)
diff --git a/qtbase/mkspecs/genode-g++/qplatformdefs.h b/qtbase/mkspecs/genode-g++/qplatformdefs.h
new file mode 100644
index 0000000..d3b5acf
--- /dev/null
+++ b/qtbase/mkspecs/genode-g++/qplatformdefs.h
@@ -0,0 +1,116 @@
+/****************************************************************************
+**
+** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Digia.  For licensing terms and
+** conditions see http://qt.digia.com/licensing.  For further information
+** use the contact form at http://qt.digia.com/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Digia gives you certain additional
+** rights.  These rights are described in the Digia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3.0 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU General Public License version 3.0 requirements will be
+** met: http://www.gnu.org/copyleft/gpl.html.
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+// 1) need to reset default environment if _BSD_SOURCE is defined
+// 2) need to specify POSIX thread interfaces explicitly in glibc 2.0
+// 3) it seems older glibc need this to include the X/Open stuff
+#ifndef _GNU_SOURCE
+#  define _GNU_SOURCE
+#endif
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+#ifndef Q_OS_GENODE
+#include <features.h>
+#endif
+#include <pthread.h>
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#ifndef Q_OS_GENODE
+#include <sys/shm.h>
+#endif
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+#include <netinet/in.h>
+#ifdef Q_OS_GENODE
+#define QT_NO_IPV6IFNAME
+#endif
+#ifndef QT_NO_IPV6IFNAME
+#include <net/if.h>
+#endif
+
+#define QT_USE_XOPEN_LFS_EXTENSIONS
+#ifdef Q_OS_GENODE
+#include "../../../../../contrib/qt-everywhere-opensource-src-5.1.0/qtbase/mkspecs/common/posix/qplatformdefs.h"
+#else
+#include "../common/posix/qplatformdefs.h"
+#endif
+
+#ifdef Q_OS_GENODE
+#undef QT_OPEN_LARGEFILE
+#define QT_OPEN_LARGEFILE 0
+#endif
+
+#undef QT_SOCKLEN_T
+
+#if (defined(__GLIBC__) && (__GLIBC__ >= 2)) || defined(Q_OS_GENODE)
+#define QT_SOCKLEN_T            socklen_t
+#else
+#define QT_SOCKLEN_T            int
+#endif
+
+#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE >= 500)
+#define QT_SNPRINTF		::snprintf
+#define QT_VSNPRINTF		::vsnprintf
+#endif
+
+#endif // QPLATFORMDEFS_H
diff --git a/qtbase/src/corelib/global/qconfig-genode.h b/qtbase/src/corelib/global/qconfig-genode.h
new file mode 120000
index 0000000..ca3b847
--- /dev/null
+++ b/qtbase/src/corelib/global/qconfig-genode.h
@@ -0,0 +1 @@
+../../../../../../src/lib/qt5/qtbase/src/corelib/global/qconfig-genode.h
\ No newline at end of file
diff --git a/qtdeclarative/examples/quick/quick.pro b/qtdeclarative/examples/quick/quick.pro
index 311e264..b356a56 100644
--- a/qtdeclarative/examples/quick/quick.pro
+++ b/qtdeclarative/examples/quick/quick.pro
@@ -12,7 +12,6 @@ SUBDIRS = accessibility \
             positioners \
             righttoleft \
             scenegraph \
-            shadereffects \
             text \
             threading \
             touchinteraction \
@@ -29,6 +28,11 @@ qtHaveModule(widgets) {
     SUBDIRS += embeddedinwidgets
 }
 
+# OpenGL dependent examples
+qtHaveModule(opengl) {
+	SUBDIRS += shadereffects
+}
+
 EXAMPLE_FILES = \
     ui-components \
     shared
diff --git a/qtdeclarative/src/imports/imports.pro b/qtdeclarative/src/imports/imports.pro
index 733c7c4..fb1a413 100644
--- a/qtdeclarative/src/imports/imports.pro
+++ b/qtdeclarative/src/imports/imports.pro
@@ -16,4 +16,4 @@ qtHaveModule(quick) {
 
 qtHaveModule(xmlpatterns) : SUBDIRS += xmllistmodel
 
-qtHaveModule(widgets) : SUBDIRS += widgets
+qtHaveModule(widgets),qtHaveModule(quick): SUBDIRS += widgets
diff --git a/qtdeclarative/tests/tests.pro b/qtdeclarative/tests/tests.pro
index 85e4f3a..9aa752b 100644
--- a/qtdeclarative/tests/tests.pro
+++ b/qtdeclarative/tests/tests.pro
@@ -1,2 +1,2 @@
-TEMPLATE = subdirs
-SUBDIRS +=  auto
+#TEMPLATE = subdirs
+#SUBDIRS +=  auto
diff --git a/qtquick1/examples/declarative/declarative.pro b/qtquick1/examples/declarative/declarative.pro
index 91378da..123539f 100644
--- a/qtquick1/examples/declarative/declarative.pro
+++ b/qtquick1/examples/declarative/declarative.pro
@@ -16,7 +16,6 @@ SUBDIRS = \
     righttoleft \
     rssnews \
     samegame \
-    shadereffects \
     snake \
     sqllocalstorage \
     text \
diff --git a/qtwebkit/Tools/qmake/mkspecs/features/features.prf b/qtwebkit/Tools/qmake/mkspecs/features/features.prf
index ddbccf9..e4d3999 100644
--- a/qtwebkit/Tools/qmake/mkspecs/features/features.prf
+++ b/qtwebkit/Tools/qmake/mkspecs/features/features.prf
@@ -39,8 +39,8 @@ defineTest(detectFeatures) {
 
     config_libxml2: WEBKIT_CONFIG += use_libxml2
     config_libxslt: WEBKIT_CONFIG += xslt
-    config_libzlib: WEBKIT_CONFIG += use_zlib
-    config_libwebp: WEBKIT_CONFIG += use_webp
+    #config_libzlib: WEBKIT_CONFIG += use_zlib
+    #config_libwebp: WEBKIT_CONFIG += use_webp
 
     # We can't use Qt's 3rdparty sources for libjpeg and libpng outside of qtbase, but if Qt
     # is using the system libraries, use them to take advantage of the WebCore image decoders as well.
@@ -81,7 +81,7 @@ defineTest(detectFeatures) {
 
     # Enable the USE(3D_GRAPHICS) flag when QtOpenGL is enabled.
     # Disable on Windows CE for now, as ANGLE won't compile.
-    !wince*:contains(QT_CONFIG, opengl): WEBKIT_CONFIG += use_3d_graphics
+    #!wince*:contains(QT_CONFIG, opengl): WEBKIT_CONFIG += use_3d_graphics
 
     # Temporarily disable FTPDIR on Windows CE (missing functions from time.h)
     wince* {
