qt5_qml.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>


---
 qtdeclarative/src/qml/jsruntime/qv4alloca_p.h      |    4 +++-
 qtdeclarative/src/qml/jsruntime/qv4engine.cpp      |   10 +++++++++-
 qtdeclarative/src/qml/jsruntime/qv4mm.cpp          |    9 ++++++++-
 qtdeclarative/src/qml/qml/qqmlaccessors_p.h        |    2 +-
 qtdeclarative/src/qml/qml/qqmlimport.cpp           |    9 +++++++++
 qtdeclarative/src/qml/types/qqmldelegatemodel_p.h  |    2 ++
 .../graphics/transforms/TransformationMatrix.h     |    2 +-
 7 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/qtdeclarative/src/qml/jsruntime/qv4alloca_p.h b/qtdeclarative/src/qml/jsruntime/qv4alloca_p.h
index f507d17..9ef4a81 100644
--- a/qtdeclarative/src/qml/jsruntime/qv4alloca_p.h
+++ b/qtdeclarative/src/qml/jsruntime/qv4alloca_p.h
@@ -50,7 +50,9 @@
 #    define alloca _alloca
 #  endif
 #else
-#  include <alloca.h>
+#  if !defined(Q_OS_GENODE)
+#    include <alloca.h>
+#  endif
 #endif
 
 #endif
diff --git a/qtdeclarative/src/qml/jsruntime/qv4engine.cpp b/qtdeclarative/src/qml/jsruntime/qv4engine.cpp
index 539bc5d..127f8df 100644
--- a/qtdeclarative/src/qml/jsruntime/qv4engine.cpp
+++ b/qtdeclarative/src/qml/jsruntime/qv4engine.cpp
@@ -38,6 +38,7 @@
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
+
 #include <qv4engine_p.h>
 #include <qv4context_p.h>
 #include <qv4value_p.h>
@@ -79,6 +80,10 @@
 #  include <sys/resource.h>
 #endif
 
+#if defined(Q_OS_GENODE)
+#include <base/thread.h>
+#endif
+
 QT_BEGIN_NAMESPACE
 
 using namespace QV4;
@@ -93,7 +98,10 @@ static ReturnedValue throwTypeError(CallContext *ctx)
 quintptr getStackLimit()
 {
     quintptr stackLimit;
-#if USE(PTHREADS) && !OS(QNX)
+#if defined(Q_OS_GENODE)
+	Genode::Thread::Stack_info stack_info = Genode::Thread::mystack();
+	stackLimit = reinterpret_cast<quintptr>(reinterpret_cast<void*>(stack_info.base));
+#elif USE(PTHREADS) && !OS(QNX)
 #  if OS(DARWIN)
     pthread_t thread_self = pthread_self();
     void *stackTop = pthread_get_stackaddr_np(thread_self);
diff --git a/qtdeclarative/src/qml/jsruntime/qv4mm.cpp b/qtdeclarative/src/qml/jsruntime/qv4mm.cpp
index f67efaf..8055cc3 100644
--- a/qtdeclarative/src/qml/jsruntime/qv4mm.cpp
+++ b/qtdeclarative/src/qml/jsruntime/qv4mm.cpp
@@ -67,6 +67,10 @@
 #include <sys/storage.h>   // __tls()
 #endif
 
+#if defined(Q_OS_GENODE)
+#include <base/thread.h>
+#endif
+
 QT_BEGIN_NAMESPACE
 
 using namespace QV4;
@@ -222,7 +226,10 @@ MemoryManager::MemoryManager()
     VALGRIND_CREATE_MEMPOOL(this, 0, true);
 #endif
 
-#if OS(QNX)
+#if defined(Q_OS_GENODE)
+	Genode::Thread::Stack_info stack_info = Genode::Thread::mystack();
+	m_d->stackTop = reinterpret_cast<quintptr *>(stack_info.top);
+#elif OS(QNX)
     // TLS is at the top of each thread's stack,
     // so the stack base for thread is the result of __tls()
     m_d->stackTop = reinterpret_cast<quintptr *>(
diff --git a/qtdeclarative/src/qml/qml/qqmlaccessors_p.h b/qtdeclarative/src/qml/qml/qqmlaccessors_p.h
index 1a4aae0..e564036 100644
--- a/qtdeclarative/src/qml/qml/qqmlaccessors_p.h
+++ b/qtdeclarative/src/qml/qml/qqmlaccessors_p.h
@@ -48,7 +48,7 @@
 #include <QtCore/qhash.h>
 #include <QtCore/QReadWriteLock>
 
-#if defined(Q_OS_QNX) || defined(Q_OS_LINUX)
+#if defined(Q_OS_QNX) || defined(Q_OS_LINUX) || defined(Q_OS_GENODE)
 #include <stdint.h>
 #endif
 
diff --git a/qtdeclarative/src/qml/qml/qqmlimport.cpp b/qtdeclarative/src/qml/qml/qqmlimport.cpp
index 8645d21..0daf186 100644
--- a/qtdeclarative/src/qml/qml/qqmlimport.cpp
+++ b/qtdeclarative/src/qml/qml/qqmlimport.cpp
@@ -1657,6 +1657,14 @@ QString QQmlImportDatabase::resolvePlugin(QQmlTypeLoader *typeLoader,
                                                   const QString &qmldirPath, const QString &qmldirPluginPath,
                                                   const QString &baseName)
 {
+#if defined(Q_OS_GENODE)
+
+    return resolvePlugin(typeLoader, qmldirPath, qmldirPluginPath, baseName,
+                         QStringList() << QLatin1String(".lib.so"),
+                         QLatin1String("qt5_"));
+
+#else
+
 #if defined(Q_OS_WIN)
     return resolvePlugin(typeLoader, qmldirPath, qmldirPluginPath, baseName,
                          QStringList()
@@ -1706,6 +1714,7 @@ QString QQmlImportDatabase::resolvePlugin(QQmlTypeLoader *typeLoader,
 # endif
 
 #endif
+#endif
 }
 
 /*!
diff --git a/qtdeclarative/src/qml/types/qqmldelegatemodel_p.h b/qtdeclarative/src/qml/types/qqmldelegatemodel_p.h
index 51f846e..16b4b4d 100644
--- a/qtdeclarative/src/qml/types/qqmldelegatemodel_p.h
+++ b/qtdeclarative/src/qml/types/qqmldelegatemodel_p.h
@@ -52,6 +52,8 @@
 #include <private/qv8engine_p.h>
 #include <private/qqmlglobal_p.h>
 
+#include <QtQml/QQmlParserStatus>
+
 Q_DECLARE_METATYPE(QModelIndex)
 
 QT_BEGIN_NAMESPACE
diff --git a/qtwebkit/Source/WebCore/platform/graphics/transforms/TransformationMatrix.h b/qtwebkit/Source/WebCore/platform/graphics/transforms/TransformationMatrix.h
index 0f04b67..89d36b8 100644
--- a/qtwebkit/Source/WebCore/platform/graphics/transforms/TransformationMatrix.h
+++ b/qtwebkit/Source/WebCore/platform/graphics/transforms/TransformationMatrix.h
@@ -61,7 +61,7 @@ class FloatRect;
 class FloatQuad;
 
 #if CPU(X86_64)
-#define TRANSFORMATION_MATRIX_USE_X86_64_SSE2
+//#define TRANSFORMATION_MATRIX_USE_X86_64_SSE2
 #endif
 
 class TransformationMatrix {
