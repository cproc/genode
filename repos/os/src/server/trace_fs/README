The trace_fs server provides access to a Trace_session by using a
File_system_session as front end.

Each trace subject is represented by a directory ('thread_name.subject')
that contains specific files ('active', 'cleanup', 'enable', 'events',
'buffer_size' and 'policy'), which are used to control the tracing
process of the thread as well as storing the content of its trace
buffer.

The tracing of a thread is only activated if there is a valid policy
installed and the intend to trace the subject was made clear by writing
'1' to the 'enable' file.

The tracing of a thread may be deactivated by writing a '0' to the
'enable' file.

A policy may be changed by overwriting the currently used one. In this
case, the old policy is replaced by the new policy and is automatically
utilized.

Writing a value to the 'buffer_size' file changes the size of
the trace buffer. This value is evaluated when reactivating the
tracing of the thread.

The content of the trace buffer may be accessed by reading from the
'events' file. New trace events are appended to this file.

Nodes of UNTRACED subjects are kept as long as they do not change their
tracing state to DEAD. In this case, all nodes are removed from the
file system. Subjects that were traced before and are now UNTRACED can
be removed by writing '1' to the 'cleanup' file - even if they
are DEAD by now.

To use the trace_fs, a configuration similar to the following may be used:

! <start name="trace_fs">
!   <resource name="RAM" quantum="128M"/>
!   <provides><service name="File_system"/></provides>
!   <config>
!           <policy label="noux -> trace"
!                   interval="1000"
!                   subject_limit="512"
!                   trace_quota="64M" />
!   </config>
! </start>

'interval' sets the period the Trace_session is polled. The
time is given in milliseconds.
'subject_limit' specifies how many trace subjects should by acquired at
max when the Trace_session is polled.
'trace_quota' is the amount of quota the trace_fs should use for the
Trace_session connection. The remaining amount of RAM quota will be used
for the actual nodes of the file system and the 'policy' as well as the
'events' files.
In addition, there are 'buffer_size' and 'buffer_size_limit' that define
the initial and the upper limit of the size of a trace buffer.
Tracing of parent processes may be enabled by setting
'parent_levels' to a value greater than '0' (though this attribute is
available, the trace session component within core still lacks support
for it).

A ready-to-use run script can by found in 'ports/run/noux_trace_fs.run'.
