source ${genode_dir}/repos/os/run/monitor_gdb.inc

# GDB loads symbols from 'debug/ld.lib.so'
if { [have_spec nova] } {
	exec ln -sf ld-nova.lib.so debug/ld.lib.so
}

# sequence of GDB commands to execute at startup
set gdb_cmds ""
append gdb_cmds {-ex "set non-stop on" }
#append gdb_cmds {-ex "set pagination off" }
append gdb_cmds "-ex \"target extended-remote localhost:$local_port\" "

# don't ask for y/n when loading a new symbol file
append gdb_cmds {-ex "set interactive-mode off" }
# set search path for shared libraries
append gdb_cmds {-ex "set solib-search-path debug" }
# set a breakpoint in the 'binary_ready_hook_for_gdb' function
#append gdb_cmds {-ex "b binary_ready_hook_for_gdb" }
# continue execution until the breakpoint triggers
#append gdb_cmds {-ex "c" }
# delete the 'binary_ready_hook_for_gdb' breakpoint
#append gdb_cmds {-ex "delete 1" }
# switch to the 'ep' thread
#append gdb_cmds {-ex "thread 2" }
# load the symbols of the test application
#append gdb_cmds "-ex \"file debug/test-monitor_gdb\" "

# run GDB
exec [terminal] -e "bash -lc \'[gdb] debug/ld.lib.so $gdb_cmds\'" &

interact -i $genode_id
