stdcxx_update.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>


---
 Makefile.tpl              |    1 +
 configure.ac              |    2 ++
 libstdc++-v3/acinclude.m4 |   20 ++++++++++----------
 3 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/Makefile.tpl b/Makefile.tpl
index 0ed8b02..aeff610 100644
--- a/Makefile.tpl
+++ b/Makefile.tpl
@@ -510,6 +510,7 @@ COMPILER_AS_FOR_TARGET=@COMPILER_AS_FOR_TARGET@
 COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@
 COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@
 
+CPPFLAGS_FOR_TARGET = @CPPFLAGS_FOR_TARGET@
 CFLAGS_FOR_TARGET = @CFLAGS_FOR_TARGET@
 CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@
 
diff --git a/configure.ac b/configure.ac
index 87428a5..9ffb246 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2319,6 +2319,8 @@ AC_ARG_WITH([debug-prefix-map],
   [DEBUG_PREFIX_CFLAGS_FOR_TARGET=])
 AC_SUBST(DEBUG_PREFIX_CFLAGS_FOR_TARGET)
 
+AC_SUBST(CPPFLAGS_FOR_TARGET)
+
 # During gcc bootstrap, if we use some random cc for stage1 then CFLAGS
 # might be empty or "-g".  We don't require a C++ compiler, so CXXFLAGS
 # might also be empty (or "-g", if a non-GCC C++ compiler is in the path).
diff --git a/libstdc++-v3/acinclude.m4 b/libstdc++-v3/acinclude.m4
index 4f37b6a..79efe91 100644
--- a/libstdc++-v3/acinclude.m4
+++ b/libstdc++-v3/acinclude.m4
@@ -1104,17 +1104,17 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [
     fi
 
     # Option parsed, now set things appropriately.
-    if test x"$glibcxx_cv_c99_math_cxx98" = x"no" ||
-       test x"$glibcxx_cv_c99_complex_cxx98" = x"no" ||
-       test x"$glibcxx_cv_c99_stdio_cxx98" = x"no" ||
-       test x"$glibcxx_cv_c99_stdlib_cxx98" = x"no" ||
-       test x"$glibcxx_cv_c99_wchar_cxx98" = x"no"; then
-      enable_c99=no;
-    else
+#    if test x"$glibcxx_cv_c99_math_cxx98" = x"no" ||
+#       test x"$glibcxx_cv_c99_complex_cxx98" = x"no" ||
+#       test x"$glibcxx_cv_c99_stdio_cxx98" = x"no" ||
+#       test x"$glibcxx_cv_c99_stdlib_cxx98" = x"no" ||
+#       test x"$glibcxx_cv_c99_wchar_cxx98" = x"no"; then
+#      enable_c99=no;
+#    else
       AC_DEFINE(_GLIBCXX_USE_C99, 1,
         [Define if C99 functions or macros from <wchar.h>, <math.h>,
         <complex.h>, <stdio.h>, and <stdlib.h> can be used or exposed.])
-    fi
+#    fi
 
     gcc_no_link="$ac_save_gcc_no_link"
     LIBS="$ac_save_LIBS"
@@ -1287,11 +1287,11 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [
         ], [glibcxx_cv_c99_stdlib_cxx11=yes], [glibcxx_cv_c99_stdlib_cxx11=no])
     ])
     AC_MSG_RESULT($glibcxx_cv_c99_stdlib_cxx11)
-    if test x"$glibcxx_cv_c99_stdlib_cxx11" = x"yes"; then
+#    if test x"$glibcxx_cv_c99_stdlib_cxx11" = x"yes"; then
       AC_DEFINE(_GLIBCXX11_USE_C99_STDLIB, 1,
         [Define if C99 functions or macros in <stdlib.h> should be imported
         in <cstdlib> in namespace std for C++11.])
-    fi
+#    fi
 
     # Check for the existence in <wchar.h> of wcstold, etc.
     if test x"$ac_has_wchar_h" = xyes &&
