set use_ps2 1
set use_usb 1
set use_serial 1

set build_components {
	core init virtualbox
	drivers/framebuffer
	drivers/timer
	server/report_rom
	app/usb_report_filter
	server/ram_fs
	server/fs_rom
}

source ${genode_dir}/repos/base/run/platform_drv.inc
# override defaults of platform_drv.inc
proc platform_drv_priority {} { return { priority="-1"} }

lappend_if [expr $use_ps2]    build_components drivers/input
lappend_if [expr $use_usb]    build_components drivers/usb
lappend_if [expr $use_serial] build_components server/log_terminal
lappend_if [have_spec x86]    build_components drivers/rtc

append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config prio_levels="4">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>}

append_platform_drv_config

append_if [expr $use_ps2] config {
	<start name="ps2_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>}

append_if [expr $use_usb] config {

	<start name="usb_config_fs" priority="-1">
		<binary name="ram_fs"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="File_system"/></provides>
		<config verbose="yes">
			<content>
				<inline name="usb_drv.config">
<config uhci="yes" ehci="yes" xhci="yes">
	<raw>
		<report devices="yes"/>
	</raw>
</config>
				</inline>
				<inline name="usb_report_filter.config">
<config>
	<!-- USB device whitelist -->
	<client label="virtualbox"/>
	<device vendor_id="0x03eb" product_id="0x204d"/>
	<device vendor_id="0x04b3" product_id="0x310c"/> <!-- lenovo mouse -->
</config>
				</inline>
			</content>
			<policy label_prefix="usb_report_filter" root="/" writeable="yes" />
			<policy label_prefix="usb_config_rom" root="/"/>
		</config>
	</start>

	<start name="usb_config_rom" priority="-1">
		<binary name="fs_rom"/>
		<resource name="RAM" quantum="1200K"/>
		<provides><service name="ROM"/></provides>
		<route>
			<service name="File_system"><child name="usb_config_fs"/></service>
			<any-service><parent/><any-child/></any-service>
		</route>
	</start>

	<start name="usb_report_filter" priority="-1">
		<resource name="RAM" quantum="1200K"/>
		<configfile name="usb_report_filter.config"/>
		<route>
			<service name="Report"><child name="report_rom" /></service>
			<service name="ROM" label="usb_report_filter.config">
				<child name="usb_config_rom"/>
			</service>
			<service name="ROM" label="devices">
				<child name="report_rom"/>
			</service>
			<service name="ROM" label="usb_drv_config">
				<child name="report_rom"/>
			</service>
			<service name="File_system" label="usb_drv.config">
				<child name="usb_config_fs"/>
			</service>
			<any-service><parent/><any-child /></any-service>
		</route>
	</start>

	<start name="usb_drv" priority="-1">
		<resource name="RAM" quantum="16M"/>
		<provides><service name="Usb"/></provides>
		<configfile name="usb_drv.config"/>
		<route>
			<service name="IRQ"><child name="acpi_drv" /></service>
			<service name="Report"> <child name="report_rom" /> </service>
			<service name="ROM" label="usb_drv.config"><child name="usb_config_rom"/></service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>}

append_if [have_spec framebuffer] config {
	<start name="fb_drv" priority="-1">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec sdl] config {
	<start name="fb_sdl" priority="-1">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_if [have_spec x86] config {
	<start name="rtc_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Rtc"/>
		</provides>
	</start>}

append_if [expr $use_serial] config {
	<start name="log_terminal">
		<resource name="RAM" quantum="2M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
	</start>
}

append config {

	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config>
			<rom>
				<policy label="usb_report_filter -> devices"        report="usb_drv -> devices"/>
				<policy label="usb_report_filter -> usb_drv_config" report="usb_drv -> config"/>
				<policy label="virtualbox -> usb_devices"           report="usb_report_filter -> usb_devices"/>
			</rom>
		</config>
	</start>

	<start name="virtualbox" priority="-2">
		<resource name="RAM" quantum="448M"/>
		<config vbox_file="test.vbox" vm_name="TestVM" xhci="yes" force_ioapic="yes">
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc">
				<vfs>
					<dir name="dev"> <log/> <rtc/> </dir>}

append_if [expr $use_serial] config {
					<dir name="dev"> <terminal/> </dir>}

append config {
					<rom name="test.vbox" />
					<rom name="test.iso" />
				</vfs>
			</libc>
		</config>
		<route>
			<service name="Report"><child name="report_rom" /></service>
			<service name="ROM">
				<if-arg key="label" value="usb_devices"/> <child name="report_rom"/>
			</service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
</config>
}

install_config $config

exec cp ${genode_dir}/repos/ports/run/vm_genode_usb_hid.vbox bin/test.vbox
exec ln -sf ../var/run/usb_hid.iso bin/test.iso

set boot_modules { core init timer report_rom virtualbox test.iso test.vbox}

# platform-specific modules
lappend_if [expr         $use_usb] boot_modules usb_drv
lappend_if [expr         $use_usb] boot_modules usb_report_filter
lappend_if [expr         $use_usb] boot_modules ram_fs
lappend_if [expr         $use_usb] boot_modules fs_rom
lappend_if [expr         $use_ps2] boot_modules ps2_drv
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec         x86] boot_modules rtc_drv

append boot_modules {
	ld.lib.so libc.lib.so libm.lib.so pthread.lib.so libc_pipe.lib.so
	libc_terminal.lib.so libiconv.lib.so stdcxx.lib.so
	qemu-usb.lib.so
}

append_if [expr $use_serial]       boot_modules { log_terminal }

append_platform_drv_boot_modules

build_boot_image $boot_modules

if {[have_include "power_on/qemu"]} {
	append qemu_args " -m 512 "
	append qemu_args " -cpu phenom "
	if {[expr $use_usb]} {
		append qemu_args " -usbdevice mouse -usbdevice keyboard"
	}
}

if { [have_include "power_on/qemu"] || ![get_cmd_switch --autopilot] } { run_genode_until forever }

# autopilot test

run_genode_until [run_boot_string] 60

run_genode_until {.*new full-speed.*\n} 30 [output_spawn_id]

# clear output buffer
unset output

run_genode_until {.*\[init -\> test-input\] Input event #12.*\n} 60 [output_spawn_id]

#unify_output { number [0-9]+} ""
#unify_output {.*__wait_event.*} ""
#unify_output {.*wait_queue_head_t.*} ""
#unify_output {.*Failed to submit URB.*} ""
filter_out_color_escape_sequences
trim_lines

compare_output_to {
[init -> virtualbox] Attach USB device 002:004 (3eb:204d)
[init -> log_terminal] [init -> usb_drv] dev_info: new full-speed USB device using xhci_hcd
[init -> log_terminal] [init -> usb_drv] dev_warn: ep 0x81 - rounding interval to 32 microframes, ep desc says 40 microframes
[init -> log_terminal] [init -> usb_drv] dev_warn: ep 0x83 - rounding interval to 32 microframes, ep desc says 40 microframes
[init -> log_terminal] [init -> usb_drv] dev_info: D L
[init -> log_terminal] [init -> usb_drv] dev_info: input: USB HID v1.11 Keyboard [D L] on usb-dummy-1/input0
[init -> log_terminal] [init -> usb_drv] dev_info: D L
[init -> log_terminal] [init -> usb_drv] dev_info: input: USB HID v1.11 Mouse [D L] on usb-dummy-1/input1
[init -> log_terminal] [init -> test-input] Input event #1	type=PRESS  	code=45	rx=0	ry=0	ax=0	ay=0	key_cnt=1	KEY_X
[init -> log_terminal] [init -> test-input] Input event #2	type=RELEASE	code=45	rx=0	ry=0	ax=0	ay=0	key_cnt=-1	KEY_X
[init -> log_terminal] [init -> test-input] Input event #3	type=PRESS  	code=272	rx=0	ry=0	ax=0	ay=0	key_cnt=1	BTN_LEFT
[init -> log_terminal] [init -> test-input] Input event #4	type=MOTION 	code=240	rx=-1	ry=0	ax=0	ay=0	key_cnt=1	
[init -> log_terminal] [init -> test-input] Input event #5	type=MOTION 	code=240	rx=0	ry=1	ax=0	ay=0	key_cnt=1	
[init -> log_terminal] [init -> test-input] Input event #6	type=RELEASE	code=272	rx=0	ry=0	ax=0	ay=0	key_cnt=-1	BTN_LEFT
[init -> usb_drv] dev_info: USB disconnect, device
[init -> virtualbox] 2 dangling allocations at allocator destruction time
[init -> log_terminal] [init -> usb_drv] dev_info: USB disconnect, device
[init -> usb_drv] dev_info: new full-speed USB device number 5 using ehci-pci
[init -> virtualbox] Attach USB device 002:005 (3eb:204d)
[init -> log_terminal] [init -> usb_drv] dev_info: new full-speed USB device using xhci_hcd
[init -> log_terminal] [init -> usb_drv] dev_warn: ep 0x81 - rounding interval to 32 microframes, ep desc says 40 microframes
[init -> log_terminal] [init -> usb_drv] dev_warn: ep 0x83 - rounding interval to 32 microframes, ep desc says 40 microframes
[init -> log_terminal] [init -> usb_drv] dev_info: D L
[init -> log_terminal] [init -> usb_drv] dev_info: input: USB HID v1.11 Keyboard [D L] on usb-dummy-2/input0
[init -> log_terminal] [init -> usb_drv] dev_info: D L
[init -> log_terminal] [init -> usb_drv] dev_info: input: USB HID v1.11 Mouse [D L] on usb-dummy-2/input1
[init -> log_terminal] [init -> test-input] Input event #7	type=PRESS  	code=45	rx=0	ry=0	ax=0	ay=0	key_cnt=1	KEY_X
[init -> log_terminal] [init -> test-input] Input event #8	type=RELEASE	code=45	rx=0	ry=0	ax=0	ay=0	key_cnt=-1	KEY_X
[init -> log_terminal] [init -> test-input] Input event #9	type=PRESS  	code=272	rx=0	ry=0	ax=0	ay=0	key_cnt=1	BTN_LEFT
[init -> log_terminal] [init -> test-input] Input event #10	type=MOTION 	code=240	rx=-1	ry=0	ax=0	ay=0	key_cnt=1	
[init -> log_terminal] [init -> test-input] Input event #11	type=MOTION 	code=240	rx=0	ry=1	ax=0	ay=0	key_cnt=1	
[init -> log_terminal] [init -> test-input] Input event #12	type=RELEASE	code=272	rx=0	ry=0	ax=0	ay=0	key_cnt=-1	BTN_LEFT
}
