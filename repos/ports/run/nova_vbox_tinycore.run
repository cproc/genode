set build_components {
	core init virtualbox
	drivers/acpi
	drivers/pci
	drivers/rtc
	drivers/input
	drivers/framebuffer
	drivers/timer
	server/nitpicker
	app/pointer
	app/status_bar
	server/liquid_framebuffer
}

build $build_components

create_boot_directory

#
# Download TinyCore ISO image
#
set tinycore_url "http://genode.org/files/nova_vbox_tinycore/tinycore.iso"
if {![file exists bin/test.iso]} {
	puts "downloading TinyCore ISO file from $tinycore_url"
	catch { exec wget -O bin/test.iso $tinycore_url }
}

set config {

<config prio_levels="4">

	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>

	<default-route>
		<any-service> <any-child/> <parent/> </any-service>
	</default-route>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="acpi" priority="-1">
		<resource name="RAM" quantum="5M"/>
		<binary name="acpi_drv"/>
		<provides>
			<service name="PCI"/>
			<service name="IRQ" />
		</provides>
		<route>
			<service name="PCI"> <any-child /> </service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>

	<start name="rtc_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Rtc"/>
		</provides>
	</start>

	<start name="fb_drv" priority="-1">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>

	<start name="ps2_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>

	<start name="nitpicker" priority="-1">
		<resource name="RAM" quantum="10M"/>
		<provides>
			<service name="Nitpicker"/>
		</provides>
		<route>
			<service name="Framebuffer"> <child name="fb_drv"/>	</service>
			<service name="Input"> <child name="ps2_drv"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<report focus="yes" />
			<domain name="pointer" layer="1" xray="no" origin="pointer" />
			<domain name="panel"   layer="2" xray="no" />
			<domain name=""        layer="3" ypos="18" height="-18" />

			<policy label="pointer"    domain="pointer"/>
			<policy label="status_bar" domain="panel"/>
			<policy label=""           domain=""/>

			<global-key name="KEY_SCROLLLOCK" operation="xray" />
			<global-key name="KEY_SYSRQ"      operation="kill" />
			<global-key name="KEY_PRINT"      operation="kill" />
			<global-key name="KEY_F11"        operation="kill" />
			<global-key name="KEY_F12"        operation="xray" />
		</config>
	</start>

	<start name="pointer">
		<resource name="RAM" quantum="1M"/>
	</start>

	<start name="status_bar">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="ROM"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<!-- first VirtualBox window -->

	<start name="liquid_fb.1" priority="-1">
		<binary name="liquid_fb"/>
		<resource name="RAM" quantum="10M"/>
		<provides>
			<service name="Framebuffer"/>
			<service name="Input"/>
		</provides>
		<config title="TinyCore 1" xpos="16" ypos="48" width="800" height="600" animate="off"/>
	</start>

	<start name="virtualbox.1" priority="-2">
		<binary name="virtualbox"/>
		<resource name="RAM" quantum="256M"/>
		<route>
			<service name="Framebuffer"> <child name="liquid_fb.1"/> </service>
			<service name="Input"> <child name="liquid_fb.1"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<image type="iso" file="test.iso" />
			<ioapic/>
			<libc stdout="/dev/log" stderr="/dev/log">
				<vfs>
					<dir name="dev"> <log/> </dir>
					<rom name="test.iso" />
				</vfs>
			</libc>
		</config>
	</start>

	<!-- second VirtualBox window -->

	<start name="liquid_fb.2" priority="-1">
		<binary name="liquid_fb"/>
		<resource name="RAM" quantum="10M"/>
		<provides>
			<service name="Framebuffer"/>
			<service name="Input"/>
		</provides>
		<config title="TinyCore 2" xpos="208" ypos="136" width="800" height="600" animate="off"/>
	</start>

	<start name="virtualbox.2" priority="-2">
		<binary name="virtualbox"/>
		<resource name="RAM" quantum="256M"/>
		<route>
			<service name="Framebuffer"> <child name="liquid_fb.2"/> </service>
			<service name="Input"> <child name="liquid_fb.2"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<image type="iso" file="test.iso" />
			<ioapic/>
			<libc stdout="/dev/log" stderr="/dev/log">
				<vfs>
					<dir name="dev"> <log/> </dir>
					<rom name="test.iso" />
				</vfs>
			</libc>
		</config>
	</start>

</config>
}

install_config $config

set boot_modules {
	core
	init
	timer
	acpi_drv
	pci_drv
	pci_device_pd
	fb_drv
	ps2_drv
	rtc_drv
	nitpicker
	pointer
	status_bar
	liquid_fb
	virtualbox
	test.iso
}

append boot_modules { ld.lib.so libc.lib.so libm.lib.so pthread.lib.so
                      libc_lock_pipe.lib.so libc_terminal.lib.so
                      libiconv.lib.so }

build_boot_image $boot_modules

puts "\nISO image generated at '[run_dir].iso'\n"

run_genode_until forever
