source ${genode_dir}/repos/libports/run/qt5_common.inc

set feature(Nic) 1

#import_from_depot [depot_user]/src/arora \
#                  [depot_user]/src/icu \
#                  [depot_user]/src/libcrypto \
#                  [depot_user]/src/libssl \
#                  [depot_user]/src/qt5_network \
#                  [depot_user]/src/qt5_printsupport \
#                  [depot_user]/src/qt5_qnitpickerviewwidget \
#                  [depot_user]/src/qt5_opengl \
#                  [depot_user]/src/qt5_qpluginwidget \
#                  [depot_user]/src/qt5_scriptclassic \
#                  [depot_user]/src/qt5_sql \
#                  [depot_user]/src/qt5_ui_tools \
#                  [depot_user]/src/qt5_webkit \
#                  [depot_user]/src/qt5_widgets \
#                  [depot_user]/src/vfs_jitterentropy \
#                  [depot_user]/src/vfs_lxip

#
# Build
#

append build_components [qt5_build_components feature]

append build_components {
	app/arora
}

build $build_components

#
# Generate config
#

append config {
<config>
	<parent-provides>}
append config [qt5_parent_provides feature]
append config {
	</parent-provides>
	<default caps="100"/>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append config [qt5_start_nodes feature]

append config {

	<start name="minimal" caps="2000">
		<resource name="RAM" quantum="2G"/>
		<config ld_verbose="yes">
			<vfs>
				<dir name="dev">
					<log/>
					<jitterentropy name="random"/>
					<inline name="rtc">2018-01-01 00:01</inline> 
				</dir>
				<dir name="socket"> <lwip dhcp="yes"/> </dir>
				<tar name="qt5_dejavusans.tar"/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" socket="/socket"/>
		</config>
		<route>
			<service name="Nitpicker"> <child name="wm"/> </service>
			<service name="Report" label="shape">
				<child name="pointer" label="wm -> arora -> shape"/>
			</service>
			<service name="ROM" label="egl_drv.lib.so"> <parent label="egl_swrast.lib.so" /> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

append boot_modules [qt5_boot_modules feature]

append boot_modules {
	minimal
	posix.lib.so
	Qt5WebEngine.lib.so
	Qt5WebEngineCore.lib.so
	Qt5Quick.lib.so
	Qt5Gui.lib.so
	Qt5Core.lib.so
	Qt5Qml.lib.so
	Qt5Network.lib.so
	arora
	icu.lib.so
	libcrypto.lib.so
	libssl.lib.so
	qt5_angle.lib.so
	qt5_opengl.lib.so
	qt5_widgets.lib.so
	qt5_jscore.lib.so
	qt5_network.lib.so
	qt5_printsupport.lib.so
	qt5_qnitpickerviewwidget.lib.so
	qt5_qpluginwidget.lib.so
	qt5_scriptclassic.lib.so
	qt5_sql.lib.so
	qt5_ui_tools.lib.so
	qt5_webcore.lib.so
	qt5_wtf.lib.so
	qt5_webkit.lib.so
	qt5_webkitwidgets.lib.so
	vfs_jitterentropy.lib.so
	vfs_lwip.lib.so
}

build_boot_image $boot_modules


proc qemu_nic_model {} {
	if [have_spec x86]         { return e1000 }
	if [have_spec lan9118]     { return lan9118 }
	if [have_spec cadence_gem] { return cadence_gem }
	return nic_model_missing
}

append qemu_args " -netdev user,id=net0 "
append qemu_args " -net nic,model=[qemu_nic_model],netdev=net0 "

run_genode_until forever
