

              ===============================================
              Release notes for the Genode OS Framework 24.08
              ===============================================

                               Genode Labs



; intro
; @nfeske


Base framework and OS-level infrastructure
##########################################

Cultivation of C++20 programming style
======================================

[https://genode.org/documentation/release-notes/23.05#New_tool_chain_based_on_GCC_12.3__C__20_enabled_by_default - One year ago],
we enabled C++20 as default. With the current release, we took the chance to
update the codebase according this version of the standard.

:C++20 function template syntax:
  The 'auto' keyword can be used in many places where template types had to be
  declared manually. We updated all sources of the base framework accordingly.

:Using 'using' instead of 'typedef':
  C-style type aliases are no longer used within the framework.

:/util/geometry.h:
  The header moved from the os to base repository.
  'Point', 'Area', and 'Rect' have been turned into plain compound types,
  making 'x', 'y', 'w', 'h', 'at', and 'area' accessible without a method call.

  'Rect' is now represented as a typle of 'Point' and 'Area', which is the most
  common form of initialization.
  The companion utilities have been updated ('constexpr', eliminating out parameters)
  as well.

:/util/color.h:
  The 'Color' type has been converted from a class to a POD type by replacing
  the constructors by the named create functions 'rgb', 'clamped_rgb',
  and 'clamped_rgba'. It thereby enables the initialization of color
  values using the '{ .r = ... }' syntax and makes the type usable in const
  expressions.

  The change also narrows the type for color components and alpha values to
  'uint8_t'. So possible integer overflows of computed values are detected
  by '-Wconversion'.


Reduced reliance on the C++ exception mechanism
===============================================

In [https://genode.org/documentation/release-notes/21.11#New_pattern_for_C___error_handling - version 21.11],
we introduced the 'Attempt' pattern as an alternative to exception-based error
handling. While gradually applying this pattern, in particular for
new introduced interfaces, we observed our code becoming more rigid and
concrete, leaving no condition unconsidered. Given this added assurance,
we are ultimately decided to remove the reliance on C++ exceptions
from the base framework over time. The current release takes a huge leap
in this respect.

:base/id_space.h:
  A new 'Id_space::apply' overload takes a second functor 'missing_fn' as
  argument, which is called whenever the lookup fails.
  It thereby allows the use of the 'Id_space' utility without
  'Unknown_id' exceptions.

:util/xml_node.h:
  The two 'Xml_node::attribute' accessors have been removed along with
  the 'Nonexistent_attribute' exception.
  Attributes are generally accessed via the 'attribute_value' method, which
  handles the case via a default value.

:Core RPC interfaces:
  Exceptions have been entirely removed from the RPC interfaces provided
  the core component, namely 'Trace', 'Pd', 'Cpu', 'Rm', 'Region_map'.

  While touching these interfaces, we took the opportunity for modernization
  and consolidation of both the interfaces and their implementation. E.g.,
  core's trace service received a welcome facelift, the former use of basic
  types got replaced by dedicated types.

  The revised 'Region_map' interface uses an 'Attr' compound struct for
  specifying arguments to the 'attach' operation, which makes the intent of
  client code more obvious. The operation returns a 'Range' instead of a
  'Local_addr' now. The 'Region_map::State' type got renamed to 'Fault'.

:base/child.h:
  The 'Child_policy::Nonexistent_id_space' exception has been removed by
  making the 'server_id_space' mandatory for of each policy.
  The former 'Child::Process' and 'Child::Process::Loaded_executable' classes
  got replaced by static functions that return failure conditions as return
  values, eliminating the use of C++ exceptions by the child framework.

The overall ambition of cutting back the use of C++ exceptions it not limited
to the base framework but can be observed for critical components as well.
In particular, the NIC router received a profound rework in this respect.


Tightened GUI-session interface
===============================

On our [https://genode.org/about/road-map - road map], we anticipated
intensive work on user-facing topics, many being related to graphical user
interfaces. While approaching these topics, we sensed that the clean
implementation of our ideas demands a revisit of the framework's existing GUI
infrastructure, in particular the GUI-session interface as provided by the
nitpicker GUI server and the window manager. Note that we barely touched this
corner of the framework in the past ten years since version
[https://genode.org/documentation/release-notes/14.08#New_GUI_architecture - 14.08].
The changes are as follows.

* The 'Gui::Session::session_control' RPC function got removed because its
  functionality has long been superseded by the window manager/layouter.

* The interfaces and components received a thorough coding-style update,
  embracing C++20, avoiding plain pointers, using 'Attr' structs for passing
  attributes, removing the notion of "invalid" handles/IDs, replacing
  basic types by dedicated types, and removing the use C++ exceptions.

* The out-of-RAM and out-of-caps conditions are now consistently handled by
  the 'Gui::Connection', which does no longer inherit the 'Gui::Session'
  interface and can thereby introduce tailored result types.

* The creation of top-level views and child views are now two distinct
  operations ('view' and 'child_view').

* The access of the subsumed framebuffer and input interfaces is now
  mediated by the plain public members 'Connection::framebuffer' and 'input'.
  This simplifies the client-side code. E.g., '_gui.input()->pending()'
  becomes '_gui.input.pending()'.

* Corner cases of view-stacking operations are now expressed as dedicated
  commands. The new stacking commands are FRONT, BACK, FRONT_OF, and BEHIND_OF.

* View handles are now managed as 'Id_space' and hence named view IDs now.
  The allocation of view IDs has been moved from the server side to the
  client, which gives clients more flexibility and reduces the surface of
  possible error conditions between client and server.
  To ease the client-side ID management, the 'Gui::Connection' hosts
  a 'view_ids' ID space for optional use. E.g., the new 'Top_level_view'
  class uses this ID space for ID allocation. This class accommodates the
  most typical use case of opening a single window.

* The creation of new views accepts initial view attributes now,
  which accommodates typical client use cases with less code.


Fostered consistency of naming
==============================

Within our code base, we are ardent about consistency. However, two relics
from the infancy of the project remained standing out like sore thumbs. First,
the '_drv' suffix of driver executables violated our established
[https://genode.org/documentation/developer-resources/conventions - style]
of naming things without artificial abbreviations.
Second, the plural naming of the _<repo>/src/drivers/_ directory used to be
inconsistent with the sibling directories _test/_, _app/_, _server/_.
The current release rectifies both inconsistencies. The '_drv' suffix has been
dropped and the directory has been renamed to _driver/_.


Device drivers
##############

Linux device-driver environment (DDE)
=====================================

; @chelmuth, @ssumpf, @cnuke, @alex-ab

commit 193b19fb78bf0d7963cf6febbba28418c9322980
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Fri May 31 15:45:01 2024 +0200

    lx_emul: support compound pages
    
    Issue #5236

commit 8dcb0eeb2ea407e8d669d3929952b48dce4e021b
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Fri May 31 15:46:21 2024 +0200

    lx_emul: enable SLUB allocator (pc, virt)
    
    The use of the Linux-internal SLUB allocator is supported by lx_emul and
    drivers may now decide between the Linux implementation or our emulation
    of kmem_cache. Drivers for pc and virt already use SLUB, while other
    drivers still use the emulation and may be adapted step-by-step incl.
    the testing on the devices.
    
    Fixes #5236

commit d709d51295ef06f7ebb4b7419eecfff297813ab8
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed Jun 26 20:27:09 2024 +0200

    dde_linux: move linux.port to legacy_linux.port
    
    This is prerequisite for the Linux update. All dependencies relying on
    the 'linux' have been adjusted to use 'legacy_linux'.
    
    Issue #5264

commit 9df78fa650b33421ab1d5d133bada4255e3024e0
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu Jun 27 09:25:19 2024 +0200

    dde_linux: Linux 6.6.47 port
    
    Issue #5264

commit 163e2dba7a59b38cb86b94008af4fd4f37ab9979
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri Jun 28 10:29:43 2024 +0200

    virt_linux: update to 6.6.47
    
    Issue #5264

commit a903e99263090986f4876029ba33235becb147f9
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu Jun 27 11:48:24 2024 +0200

    lx_emul: adjust to Linux 6.6.47
    
    Issue #5264

commit 893c8508b20e9fe4d1afde4cf8f4ba99e6b0678f
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri Jun 28 10:30:24 2024 +0200

    lxip: update to 6.6.47
    
    Now, we schedule before unblocking the rx_task. This is done in order to
    execute a potentially ready ksoftirqd before unblocking the rx_task,
    which in turn may execute soft-interrupt handlers through bottom half
    code leading to double lock attempts of the socket spinlock.
    
    Issue #5264

commit a702f74e5514bf7d3eab5bd553baf84b1ca1e631
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon Jul 1 11:18:33 2024 +0200

    usb_hid: update to 6.6.47
    
    Issue #5264

commit 6f3aa54963cc7320c740bdab42ec5abe84bab996
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon Jul 1 12:45:15 2024 +0200

    usb_net: update to 6.6.47
    
    Issue #5264

commit cf2b84d6006cee283cd8238ddaaa0a1ef9106ff3
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon Jul 1 17:02:49 2024 +0200

    test/driver_time: update to 6.6.47
    
    Issue #5264

commit 7b68262ea7c679b5d0f55d6d9ca616ae3240d6d4
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon Jul 1 17:24:06 2024 +0200

    wireguard: update to 6.6.47
    
    Issue #5264

commit c876cdaf46adc9c0e44e2fddb438d7763173d7f3
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed Jul 31 15:18:57 2024 +0200

    pc: use linux 6.6.47
    
    Issue #5264

commit 38650b965c04443b612a1c7302773b7d4a5971ed
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Fri Aug 2 14:02:06 2024 +0200

    pc_nic: update to 6.6.47
    
    Issue #5264

commit 6a63b6c735e7dd6ac8361bb6efd447121031604c
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri Aug 2 14:36:11 2024 +0200

    pc_usb_host: update to 6.6.47
    
    Issue #5264

commit 61ea87b337dc9dd219212fcf16cfaa7433eb546b
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Thu Aug 1 18:58:53 2024 +0200

    pc_wifi: update to Linux 6.6.47
    
    Issue #5264

commit 7bce3192cae2084ff92373cae39424df98a16483
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Tue Aug 6 13:15:32 2024 +0200

    intel/display: update to 6.6.47
    
    Issue #5264


Platform driver
===============

; @alex-ab

commit 0c97c13562be304e42524f76f3691a498ba5d7e0
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Jun 6 10:41:49 2024 +0200

    pci_decode: report pci bridge configuration
    
    as setup by firmware after boot. The information will/can be used by the
    platform driver to re-program bridges after a system suspend/resume cycle.
    
    Issue #5241

commit 3216733a059101fd6aaa35fb86d661a54faa7065
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Jun 6 11:08:39 2024 +0200

    driver/platform: remember bridge configuration
    
    by evaluating the pci decode's 'devices' ROM and storing the information in
    the pci config list model representation.
    
    Issue #5241

commit 8b0a16d750b33cd325182ff3e1f105917f8d6164
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Jun 6 11:40:01 2024 +0200

    driver/platform: re-configure bridges on resume
    
    Fixes #5241


Improvements for NXP's i.MX family
==================================

; @skalk

commit 4a5c073ed849ec6a39e841a36083a338cfa23f8c
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Tue May 21 13:20:56 2024 +0200

    nic/fec: use linux-imx 6.1.20
    
    This commit introduces an updated driver that uses the current
    linux-imx (6.1.20) version.

commit 2f33a1d428ea097038c1e4a4e4d4cee002926cab
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Mon May 27 14:02:10 2024 +0200

    framebuffer/imx8mq: use linux-imx 6.1.20
    
    This commit introduces an updated driver that uses the current
    linux-imx (6.1.20) version.
    
    It also contains a unified test run-script that works on both the
    EVK as well as the MNT Reform2. The HDMI port on the later device
    can be exercised by changing the device-tree route to
    'imx8mq_fb-mnt_reform2-hdmi.dtb'.

commit 5b4fc047fa4ac6541192158c156e09eb5c570c14
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon Jun 10 16:28:40 2024 +0200

    sd_card/imx8mq: use linux-imx 6.1.20
    
    This commit introduces an updated driver that uses the current
    linux-imx (6.1.20) version.

commit b021cd0813e1be3377be3f25bdc028e83f35f23a
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Mon Jun 3 15:21:52 2024 +0200

    Remove old DDE Linux MNT Reform 2 snippets

commit a2f5e04f3e2dc7ee33837551818c0974965e6ddf
Author: Alice Domage <alice.domage@gapfruit.com>
Date:   Tue Feb 27 15:28:49 2024 +0100

    imx8mp_iot_gate: add base-hw kernel support

commit 5d51d49145326c2605298e57686b3f2814d5110a
Author: Alice Domage <alice.domage@gapfruit.com>
Date:   Thu Mar 14 17:02:50 2024 +0100

    add: imx8mp_platform
    
    The driver is duplicated from imx8mq and adapted for imx8mp

commit accedf54777754068874c6d5079e3e876b893710
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed May 22 15:51:52 2024 +0200

    imx8m*_platform: unification & disable clocks
    
    * Unify System-Reset-Controller, General-Power-Controller, and
      common parts of the Central-Clock-Module in between
      i.MX 8M Quad & 8M Plus SoC
    * Fix regression: root clocks, gates and plls not necessary get
      disabled by default

commit b58d781660697a1fa96784c111f5cc4d829a5eb4
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon May 27 16:02:17 2024 +0200

    imx8mp_platform: correct set/unset of PLLs
    
    The enable-output-gate bits of the PLL 1416 and 1443 are not equal.
    Implement the correct protocol to enable/disable the PLL, and to ensure
    that it isn't bypassed.

commit 56b1574e041a028b4265252600b8f519b723c9d7
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Thu Jun 6 15:33:57 2024 +0200

    imx8mp_platform: setup IOMUX controller

commit 1a52e69ca6afea4bc8e50e7bb23c29334f4326ac
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Thu Jun 6 15:34:49 2024 +0200

    simple EEPROM over I2C reader for i.MX 8M IOT gate

commit b0e230d042fcfba19fb5c7ba6235c9725bcc178c
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Thu Jun 6 15:36:36 2024 +0200

    stmmac_nic: initial support for imx8mp_iot_gate

commit b739035f4ab3a9765134d019eab7ad7f006b684a
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue Jun 11 14:40:06 2024 +0200

    fec_nic: add support for i.MX 8M IOT gateway

commit fdfe9f8ca1363d8b4e7b0730e700c268431d2325
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue Jun 11 15:20:50 2024 +0200

    imx8mq_sd_card: add support for i.MX 8M IOT gateway

commit 49d6b6272a6db36958f207a670653200640077c9
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon Jun 17 12:49:22 2024 +0200

    imx8mp_platform: implement system reset mechanism
    
    - Consume system state ROM analogue to PC platform driver
    - Use first watchdog timer as mechanism to reset system
    - Keep first and second watchdog timer's clocks alive,
      the second one is intended to be used by the secure world (ATF)

commit 501709d5f4a440be01594b7f583232ce50c6693b
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon Jun 17 13:54:39 2024 +0200

    imx8mp_iot_gate: add GPIO controllers to devices
    
    - Add missing gpio2, gpio3, gpio4, and gpio5 to board devices ROM

commit 133d92a0caa64a0028f4ba237dc84d92fc752324
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue Jun 18 13:29:55 2024 +0200

    imx8mp_iot_gate: add ECSPI device to board ROM
    
    - the IOT gateway uses only the second ECSPI from NXP's i.MX 8M Plus SoC

commit 6306d8f00d2aedda5d8032ee24e30c3faf590eb2
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 11:41:38 2024 +0200

    imx7d_sabre: move all board specifics to imx repo
    
    Ref genodelabs/genode#5252

commit cd8fb1ebe0afd39b4fa3d8297fc09e41d9129c91
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 13:43:48 2024 +0200

    tz_vmm: move trustzone example into imx repo
    
    Ref genodelabs/genode#5252

commit 1eadf43f32391ce3b249bc7c60458a4bab90dd9a
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 13:56:51 2024 +0200

    synaptics_dsx_touch: move driver to imx repository
    
    Ref genodelabs/genode#5252

commit ea5c632a4c8b61bc2c2b0cbf422678dd11b18190
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 14:03:17 2024 +0200

    imx8q_evk_i2c: move driver to imx repository
    
    Ref genodelabs/genode#5252

commit 32984ab438c67f0e8e319ddf7a3bfba6d3cde1aa
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 14:52:12 2024 +0200

    imx*_sd_card: move drivers to imx repository
    
    Ref genodelabs/genode#5252

commit b844240e89f6a574fe6716850d45232101c853ee
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jun 19 16:48:59 2024 +0200

    move remaining imx53 related files to imx repo
    
    Ref genodelabs/genode#5252

commit 2b3fb1c72da3ce428523555447ea90256591d8dd
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Thu Jun 20 14:17:02 2024 +0200

    hw: adapt to removal of cortex* directories
    
    Ref genodelabs/genode#5253

commit a8d02b398d71d69d1a3ee7a715ce3f22b9f76ae6
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue Jun 25 12:02:23 2024 +0200

    add pin driver with Pin_state, Pin_control, and IRQ
    
    - To replace the legacy GPIO session interface with the
      newer Pin_state, Pin_control and IRQ session

commit 0b7f89c50eaf24862d397aad2e8506d88d11f4e2
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue Jun 25 12:06:07 2024 +0200

    adapt components and run-scripts to use pin driver

commit 745313f056676ddebbd9c364dd9dfc123c53ca5b
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Wed Jun 26 15:49:34 2024 +0200

    timer: add EPIT 2 standalone timer
    
    Based upon new Timer schema of genode#5138 and derived from
    from former epit timer of Genode base repository, which got replaced by
    this timer.


Libraries and applications
##########################

Qt6 application framework
=========================

; @cproc

commit d0c35b9d2f798634af23111657d3918f8d45f7fb
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Mon Aug 19 11:17:52 2024 +0200

    libports: add Qt6
    
    Fixes #5325


Mesa version 24.0.8
===================

With release 24.05 we updated Mesa to major version 24. During the last few
month we improved and fixed some bugs (memory allocations, better
synchronization) for Intel's Iris driver and as a side effect updated Mesa to
version 24.0.8.


Platforms
#########

Execution on bare hardware (base-hw)
====================================

; @skalk

commit 391a919a2dfb62769f21463072441284e328f15f
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Jul 3 14:44:15 2024 +0200

    hw: move stack into cpu local mem area
    
    Ref genodelabs/genode#5310

commit 080b3f0f1ef22a5b8b233ffa1624b5e460d6ecae
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Thu Jul 4 14:50:14 2024 +0200

    hw: move cpu kernel object into cpu local area
    
    Fix genodelabs/genode#5310

NOVA microhypervisor
====================

; @alex-ab

commit 641ff65a2ec0691df8904dd2e85b887e6d818258
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Jul 25 11:42:37 2024 +0200

    nova: support to run on e-core only SOCs
    
    The code to group together SMT threads of one CPU and to move P-Core to
    the beginning of Genode's affinity-space, did not consider to run on
    SOCs with only E-Core CPUs.
    
    Re-structure the code to support e-Core only SOCs.
    
    Additionally, provide a fallback mapping in case of CPU id reordering problems.
    Track faulty re-mapping and delay the reporting until core_log is initialized,
    so that the warnings is visible to consumers, e.g. on Sculpt OS.
    
    Related to discussion of #5304
    
    Fixes #5307

commit 6aeb5c03749e0ba4d3c8f58304f207f7acdbc249
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Mon Jul 22 10:20:44 2024 +0200

    nova: enable FPU AVX support
    
    Add extended FPU state detection and handling (via xsave and friends) to the
    kernel, which has to store/load more FPU state (~512 -> 2k++) during context
    switching of threads. Additional the referenced nova branch contains various
    optimization during VM destruction and cross core IPC resource caching.
    
    This FPU work is based upon upstream NOVA kernel and Hedron commits.
    
    Issue #5314
    Fixes #3914

commit 1b8a6c6176c2ba46876591ca13bd3a588b561e18
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Fri Jul 26 19:05:33 2024 +0200

    seoul: enable AVX support
    
    Add preliminary support. Tested on Sculpt 24.04 with nova
    kernel on AMD and Intel in a Debian 12 VM.
    
    genodelabs/genode#5314


Build system and tools
######################

Improved reproducibility
========================

The demand for reproducible builds has been increasing during the last few
years. The main source that makes builds unreproducible are timestamps. On
Genode especially components that produce TAR files suffered from this
limitation, since the date of the archived data was set to the time of
archiving. To avoid this issue we introduce an overwriteable global TAR_OPT in
Genode's build system that sets the date of the archived files to the date of
the epoch and the user/group to one. As a starting point we added the TAR_OPT to
the Qt5-build process while other targets will incrementally follow.

Additionally, we enabled our Rump port to be reproducible.


Goa SDK
=======

User-level debugging
~~~~~~~~~~~~~~~~~~~~

After the addition of on-target debugging on Sculpt OS in
[https://genode.org/documentation/release-notes/24.05#On-target_debugging_using_the_GNU_debugger__GDB_ - Genode 24.05],
it was about time to equip Goa with debugging support as well. For this purpose,
the tool received an optional '--debug' command-line switch, which instructs Goa
to consider
[https://genode.org/documentation/release-notes/23.11#Debug_information_for_depot_binaries - dbg archives].
in its download, export and publish steps.

When provided with this switch on 'goa run', the tool also creates a
_<project-name>.gdb_ file in the project's _var/_ directory. This file contains
initialization commands for the GNU debugger (GDB) and can be passed to GDB
via the '--command' argument.

The _Goa testbed_ package and preset have been updated accordingly to make use
of our debug monitor. The default NIC router configuration on Sculpt OS now
comprises an additional _gdb_ domain that is intended to accomodate a single
client to which the router forwards port 9999 of the _uplink_ domain. This is
intended for making the testbed's debug monitor available as a remote GDB target.
Note that these changes will be become effective with the next Sculpt release.
In the meantime, you may cherry-pick the
[https://github.com/genodelabs/genode/commit/aeb42b0983143e6fe0a01f7f5316612709da1a9d - corresponding commit].

Along with debugging support, Goa also received a '--with-backtrace' switch and
a 'backtrace' command. The former instructs the tool to preserve frame-pointer
information by supplying the '-fno-omit-frame-pointer' flag to GCC. The
'goa backtrace' command is a shortcut for 'goa run --debug --with-backtrace' that
additionally passes the log output to our
[https://genode.org/documentation/release-notes/24.02#Convenient_parsing_of_backtraces - backtrace tool].

For detailed instructions, please refer to the corresponding
[https://genodians.org/jschlatow/2024-07-31-goa-gdb - Genodians article].


Meson build system
~~~~~~~~~~~~~~~~~~

Projects like Qemu, glib, and Mesa have switched to the Python based
[https://mesonbuild.com - Meson] build system. Mesa, for example, produces a
large number of generated C/C++ files using Meson features. In order to ease the
porting effort of Meson based projects to Genode we have added basic support for
this build system to Goa.

A Meson project can be build and executed like any other Goa supported build
system with the addition that there can be a _meson_args_ file (like
_cmake_args_ for CMake) where additional arguments can be passed to the meson
command. Otherwise, Goa will look for a _meson.build_ file in the _src_
directory which identifies the projects build system as Meson.

As a simple test you can checkout the _hello_meson_ example in the _examples_
directory of Goa.

At the current stage only binary targets for x86_64 systems are supported by
Goa/Meson. Shared libraries and ARM support will be addressed next.


Rust cargo
~~~~~~~~~~

; @atopia

commit 090c810745e2a5e5e20866b9296809813fea0489
Author: Benjamin Lamowski <benjamin.lamowski@genode-labs.com>
Date:   Thu Aug 15 18:32:04 2024 +0200

    cargo: build Rust projects with a custom profile
    
    The Rust compiler profile for x86_64-unknown-freebsd assumes that thread
    local storage (TLS) is available, and tries the TLS area via the FS
    segment. Since Genode does not provide a TLS area to threads, this will
    result in a nullptr dereference, which showed es segfaults in our test
    programs from Rust 1.77 onward.
    
    Other than implementing x86_64 TLS support throughout our supported
    kernels, this cannot be resolved within the premise of using a
    precompiled stable Rust binary target for x86_64-unknown-freebsd.
    
    Instead, a paradigmn shift is needed: we now compile our Rust software -
    including invoked parts of the standard library - from source, which
    requires a nightly Rust toolchain.
    
    Fixes #101

