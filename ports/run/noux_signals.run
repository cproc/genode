#
# On OMAP4 where no PS/2 is available, we rely on USB HID
#
proc use_usb_input { } { return [expr ![have_spec ps2] && [have_spec usb]] }

set build_components {
	core init drivers/timer noux/minimal
	drivers/pci drivers/framebuffer drivers/input
    server/terminal test/noux_signals
}

lappend_if [use_usb_input] build_components drivers/usb

build $build_components

# create tar archive
exec tar cfv bin/noux_signals.tar -h -C bin test-noux_signals

create_boot_directory

append config {
	<config verbose="yes">
		<parent-provides>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="CAP"/>
			<service name="RAM"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="PD"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="IO_PORT"/>
			<service name="SIGNAL"/>
		</parent-provides>
		<default-route>
			<any-service> <any-child/> <parent/> </any-service>
		</default-route>
		<start name="timer">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Timer"/></provides>
		</start> }
append_if [have_spec framebuffer] config {
		<start name="fb_drv">
			<resource name="RAM" quantum="4M"/>
			<provides><service name="Framebuffer"/></provides>
		</start>}
append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }
append_if [use_usb_input] config {
		<start name="usb_drv">
			<resource name="RAM" quantum="12M"/>
			<provides><service name="Input"/></provides>
			<config uhci="yes" ehci="yes" xhci="yes"> <hid/> </config>
		</start> }
append config {
		<start name="terminal">
			<resource name="RAM" quantum="2M"/>
			<provides><service name="Terminal"/></provides>
			<config>
				<keyboard layout="de"/>
				<font size="12" />
			</config>
		</start>
		<start name="noux">
			<resource name="RAM" quantum="1G"/>
			<config verbose="yes">
				<fstab> <tar name="noux_signals.tar" /> </fstab>
				<start name="test-noux_signals"> </start>
			</config>
		</start>
	</config>
}

install_config $config

set boot_modules {
	core init timer ld.lib.so noux libc.lib.so
	terminal libc_noux.lib.so noux_signals.tar
}

# platform-specific modules
lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec         pci] boot_modules pci_drv
lappend_if [have_spec         ps2] boot_modules ps2_drv
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [use_usb_input]         boot_modules usb_drv

build_boot_image $boot_modules

run_genode_until forever

exec rm bin/noux_signals.tar
exec rm $noux_output_file

