binutils_debug.patch

From: Christian Prochaska <christian.prochaska@genode-labs.com>


---
 bfd/elf32-arm.c     |    7 +++++++
 bfd/elflink.c       |    1 +
 bfd/elfnn-aarch64.c |   10 ++++++++--
 bfd/elfxx-x86.c     |    7 +++++++
 4 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index 28ee9d5..ebea317 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -15937,6 +15937,11 @@ elf32_arm_adjust_dynamic_symbol (struct bfd_link_info * info,
   asection *s, *srel;
   struct elf32_arm_link_hash_entry * eh;
   struct elf32_arm_link_hash_table *globals;
+  
+fprintf(stderr, "%s: %s, is_weakalias: %u, non_got_ref: %u\n", __func__,
+                h->root.root.string,
+                h->is_weakalias,
+                h->non_got_ref);
 
   globals = elf32_arm_hash_table (info);
   if (globals == NULL)
@@ -16001,6 +16006,8 @@ elf32_arm_adjust_dynamic_symbol (struct bfd_link_info * info,
   if (h->is_weakalias)
     {
       struct elf_link_hash_entry *def = weakdef (h);
+fprintf(stderr, "%s: string: %s, non_got_ref: %u\n", __func__, def->root.root.string, def->non_got_ref);
+fprintf(stderr, "%s: h: %p, def: %p\n", __func__, h, def);
       BFD_ASSERT (def->root.type == bfd_link_hash_defined);
       h->root.u.def.section = def->root.u.def.section;
       h->root.u.def.value = def->root.u.def.value;
diff --git a/bfd/elflink.c b/bfd/elflink.c
index e50c0e4..1459b71 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -7475,6 +7475,7 @@ _bfd_elf_link_hash_copy_indirect (struct bfd_link_info *info,
     dir->ref_dynamic |= ind->ref_dynamic;
   dir->ref_regular |= ind->ref_regular;
   dir->ref_regular_nonweak |= ind->ref_regular_nonweak;
+fprintf(stderr, "%s: ind: %s: %u, dir: %s: %u\n", __func__, ind->root.root.string, ind->non_got_ref, dir->root.root.string, dir->non_got_ref);
   dir->non_got_ref |= ind->non_got_ref;
   dir->needs_plt |= ind->needs_plt;
   dir->pointer_equality_needed |= ind->pointer_equality_needed;
diff --git a/bfd/elfnn-aarch64.c b/bfd/elfnn-aarch64.c
index faa2761..53087e6 100644
--- a/bfd/elfnn-aarch64.c
+++ b/bfd/elfnn-aarch64.c
@@ -7098,7 +7098,10 @@ elfNN_aarch64_adjust_dynamic_symbol (struct bfd_link_info *info,
 {
   struct elf_aarch64_link_hash_table *htab;
   asection *s, *srel;
-
+fprintf(stderr, "%s: %s, is_weakalias: %u, non_got_ref: %u\n", __func__,
+                h->root.root.string,
+                h->is_weakalias,
+                h->non_got_ref);
   /* If this is a function, put it in the procedure linkage table.  We
      will fill in the contents of the procedure linkage table later,
      when we know the address of the .got section.  */
@@ -7125,13 +7128,14 @@ elfNN_aarch64_adjust_dynamic_symbol (struct bfd_link_info *info,
     /* Otherwise, reset to -1.  */
     h->plt.offset = (bfd_vma) - 1;
 
-
   /* If this is a weak symbol, and there is a real definition, the
      processor independent code will have arranged for us to see the
      real definition first, and we can just use the same value.  */
   if (h->is_weakalias)
     {
       struct elf_link_hash_entry *def = weakdef (h);
+fprintf(stderr, "%s: string: %s, non_got_ref: %u\n", __func__, def->root.root.string, def->non_got_ref);
+fprintf(stderr, "%s: h: %p, def: %p\n", __func__, h, def);
       BFD_ASSERT (def->root.type == bfd_link_hash_defined);
       h->root.u.def.section = def->root.u.def.section;
       h->root.u.def.value = def->root.u.def.value;
@@ -7155,6 +7159,7 @@ elfNN_aarch64_adjust_dynamic_symbol (struct bfd_link_info *info,
   /* If -z nocopyreloc was given, we won't generate them either.  */
   if (info->nocopyreloc)
     {
+fprintf(stderr, "%s: nocopyreloc -> non_got_ref = 0\n", __func__);
       h->non_got_ref = 0;
       return TRUE;
     }
@@ -7167,6 +7172,7 @@ elfNN_aarch64_adjust_dynamic_symbol (struct bfd_link_info *info,
       eh = (struct elf_aarch64_link_hash_entry *) h;
       if (!need_copy_relocation_p (eh))
 	{
+fprintf(stderr, "%s: !need_copy_relocation -> non_got_ref = 0\n", __func__);
 	  h->non_got_ref = 0;
 	  return TRUE;
 	}
diff --git a/bfd/elfxx-x86.c b/bfd/elfxx-x86.c
index d6b851c..61a9424 100644
--- a/bfd/elfxx-x86.c
+++ b/bfd/elfxx-x86.c
@@ -1843,6 +1843,11 @@ _bfd_x86_elf_adjust_dynamic_symbol (struct bfd_link_info *info,
   const struct elf_backend_data *bed
     = get_elf_backend_data (info->output_bfd);
 
+fprintf(stderr, "%s: %s, is_weakalias: %u, non_got_ref: %u\n", __func__,
+                h->root.root.string,
+                h->is_weakalias,
+                h->non_got_ref);
+
   /* STT_GNU_IFUNC symbol must go through PLT. */
   if (h->type == STT_GNU_IFUNC)
     {
@@ -1932,6 +1937,8 @@ _bfd_x86_elf_adjust_dynamic_symbol (struct bfd_link_info *info,
       BFD_ASSERT (def->root.type == bfd_link_hash_defined);
       h->root.u.def.section = def->root.u.def.section;
       h->root.u.def.value = def->root.u.def.value;
+fprintf(stderr, "%s: string: %s, non_got_ref: %u\n", __func__, def->root.root.string, def->non_got_ref);
+
       if (ELIMINATE_COPY_RELOCS
 	  || info->nocopyreloc
 	  || SYMBOL_NO_COPYRELOC (info, eh))
