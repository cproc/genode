proc binary_name_ld_lib_so { } { return "ld-sel4.lib.so" }
proc binary_name_core_o    { } { return "core-sel4.o" }
proc binary_name_timer     { } { return "pit_timer_drv" }


proc run_boot_string   { } { return "\n\rStarting node #0" }
proc core_link_address { } { return "0x02000000" }


##
# Populate boot directory with binaries on hw
#
proc run_boot_dir {binaries} {

	# build sel4 kernel
	build { lib/ld/sel4 kernel/sel4 }
	exec cp bin/sel4 [run_dir]/sel4

	build_core_image $binaries

	if {[have_include "image/iso"] || [have_include "image/disk"]} {
		#
		# Install isolinux/GRUB files and bender
		#
		install_iso_bootloader_to_run_dir

		#
		# Generate GRUB config file
		#
		set fh [open "[run_dir]/boot/grub/menu.lst" "WRONLY CREAT TRUNC"]
		puts $fh "timeout 0"
		puts $fh "default 0"
		puts $fh "\ntitle Genode on seL4"
		puts $fh " kernel /boot/bender norelocate"
		puts $fh " module /sel4 disable_iommu"
		puts $fh " module /image.elf"

		close $fh
	}

	run_image [run_dir]/image.elf

	if {[have_include "load/tftp"]} {
		#
		# Install PXE bootloader pulsar
		#
		install_pxe_bootloader_to_run_dir

		#
		# Generate pulsar config file
		#
		set fh [open "[run_dir]/config-52-54-00-12-34-56" "WRONLY CREAT TRUNC"]
		puts $fh " exec /boot/bender norelocate"
		puts $fh " load /sel4 disable_iommu"
		puts $fh " load /image.elf"
		close $fh

		generate_tftp_config
	}

	if {[have_include "load/ipxe"]} {
		create_ipxe_iso_config
		update_ipxe_boot_dir
		create_symlink_for_iso
	}
}
